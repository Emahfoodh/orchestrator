apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: billing-app
  namespace: microservices
  labels:
    app: billing-app
spec:
  serviceName: billing-app
  replicas: 1
  selector:
    matchLabels:
      app: billing-app
  template:
    metadata:
      labels:
        app: billing-app
    spec:
      containers:
      - name: billing-app
        image: emanmahfoodh/billing-app:latest
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: postgres-password
        - name: BILLING_DB_NAME
          valueFrom:
            secretKeyRef:
              name: database-config
              key: billing-db-name
        - name: DATABASE_URI
          value: "postgresql://postgres:postgres@billing-db:5432/billing_db"
        - name: RABBITMQ_HOST
          value: "rabbitmq"
        - name: RABBITMQ_PORT
          value: "5672"
        - name: RABBITMQ_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-credentials
              key: rabbitmq-user
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rabbitmq-credentials
              key: rabbitmq-password
        - name: RABBITMQ_QUEUE
          valueFrom:
            secretKeyRef:
              name: database-config
              key: rabbitmq-queue
        - name: HOST
          value: "0.0.0.0"
        - name: PORT
          value: "8080"
        - name: DEBUG
          value: "false"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: billing-app
  namespace: microservices
  labels:
    app: billing-app
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  clusterIP: None
  selector:
    app: billing-app
